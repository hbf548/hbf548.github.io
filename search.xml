<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>继承Thread类</title>
      <link href="/2021/08/25/%E7%BB%A7%E6%89%BFThread%E7%B1%BB/"/>
      <url>/2021/08/25/%E7%BB%A7%E6%89%BFThread%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"># 开启线程<ul><li>自定义线程类继承Thread类，</li><li>重写run() 方法，编写线程知兴替</li><li>创建线程对象，调用start（）方法启动线程</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建线程方式：继承Thread类， 重写run()方法，调用start开启线程</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread01</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//run方法线程体</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">"我在写代码=========="</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建一个线程对象</span></span><br><span class="line">        Thread01 thread01 = <span class="keyword">new</span> Thread01();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用start方法,开启线程，调用当前线程的run方法</span></span><br><span class="line">        thread01.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//mian线程，主线程</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2000</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">"我在学习======="</span>+i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果：交替！争抢线程</p><p><img src="https://ae01.alicdn.com/kf/H7a6985272eca469e8e7a04e29a1eb02cI.png" alt="0.png"></p><h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><ul><li>线程开启不一定，立即执行，由cpu调度</li><li>start方法启动当前线程，调用run方法</li><li>不能通过run（）方法启动线程，因为它没有开启另一个线程，依旧是主线程（main）在跑，而且按照方法前后顺序跑</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2021/png/411176/1627266773234-348c4aa6-d89b-4fc5-825c-732e95d3d26b.png" alt></p><ul><li>不能让已经start过的线程，再次开启。因为下第一次调用start，它的状态是0，再次调用的时候，它的状态就不是0了，所以报一个异常。 </li></ul><p><img src="/.io//3.png" alt><br>想要再次启动需要重新创建一个线程<br><img src="/.io//4.png" alt><br><a name="jnyUK"></a></p><h1 id="案例：下载图片"><a href="#案例：下载图片" class="headerlink" title="案例：下载图片"></a>案例：下载图片</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//联系Thread， 实现多线程同步下载</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestThread02</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String url;  <span class="comment">//网络图片地址</span></span><br><span class="line">    <span class="keyword">private</span> String name; <span class="comment">//保存文件名</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">TestThread02</span><span class="params">(String url, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.url = url;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下载图片的线程执行体</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        WebDownload webDownload = <span class="keyword">new</span> WebDownload();</span><br><span class="line">        webDownload.download(url, name);</span><br><span class="line">        System.out.println(<span class="string">"下载了文件名为:"</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        TestThread02 t1 = <span class="keyword">new</span> TestThread02(<span class="string">"https://mmbiz.qpic.cn/mmbiz_jpg/uChmeeX1FpyB6WkMTL2IUapfTtGH6FFOialcoD9IRXH5jUskMiaHfPd8AKmWZYGAerLH3bpulF72IYhrK2kuia9Pg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"</span>,<span class="string">"1.png"</span>);</span><br><span class="line">        TestThread02 t2 = <span class="keyword">new</span> TestThread02(<span class="string">"https://mmbiz.qpic.cn/mmbiz_jpg/uChmeeX1FpyB6WkMTL2IUapfTtGH6FFOialcoD9IRXH5jUskMiaHfPd8AKmWZYGAerLH3bpulF72IYhrK2kuia9Pg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"</span>,<span class="string">"2.png"</span>);</span><br><span class="line">        TestThread02 t3 = <span class="keyword">new</span> TestThread02(<span class="string">"https://mmbiz.qpic.cn/mmbiz_jpg/uChmeeX1FpyB6WkMTL2IUapfTtGH6FFOialcoD9IRXH5jUskMiaHfPd8AKmWZYGAerLH3bpulF72IYhrK2kuia9Pg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"</span>,<span class="string">"3.png"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//下载器</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WebDownload</span> </span>&#123;</span><br><span class="line">    <span class="comment">//下载方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(String url, String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyURLToFile(<span class="keyword">new</span> URL(url), <span class="keyword">new</span> File(name));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">"IO异常，download方法出现问题"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/.io//5.png" alt><br>发现下载顺序是不一样的</p>]]></content>
      
      
      <categories>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 继承Thread类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用多线程的优点</title>
      <link href="/2021/08/25/%E4%BD%BF%E7%94%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BC%98%E7%82%B9/"/>
      <url>/2021/08/25/%E4%BD%BF%E7%94%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BC%98%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>背景:以单核CPU为例，只使用单个线程先后完成多个任务(调用多个方法)，肯定比用多个线程来完成用的时间更短，为何仍需多线程呢?<br><strong>多线程程序的优点:</strong><br>1.提高应用程序的响应。对图形化界面更有意义，可增强用户体验。<br>2.提高计算机系统CPU的利用率<br>3.改善程序结构。将既长又复杂的进程分为多个线程，独立运行，利于理解和<br>修改。</p><p><strong>何时需要多线程：</strong><br>●程序需要同时执行两个或多个任务。<br>●程序需要实现一-些需要等待的任务时，如用户输入、文件读写、网络操作、搜索等。<br>●需要一些后台运行的程序时。</p>]]></content>
      
      
      <categories>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 使用多线程的优点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单核与多核cpu</title>
      <link href="/2021/08/25/%E5%8D%95%E6%A0%B8%E4%B8%8E%E5%A4%9A%E6%A0%B8cpu/"/>
      <url>/2021/08/25/%E5%8D%95%E6%A0%B8%E4%B8%8E%E5%A4%9A%E6%A0%B8cpu/</url>
      
        <content type="html"><![CDATA[<ul><li>单核CPU，其实是一种假的多线程，因为在一个时间单元内，也只能执行一个线程的任务。例如:虽然有多车道，但是收费站只有一个工作人员在收费，只有收了费才能通过，那么CPU就好比收费人员。如果有某个人不想交钱，那么收费人员可以把他“挂起”(晾着他，等他想通了，准备好了钱，再去收费)。但是因为CPU时间单元特别短，因此感觉不出来。</li><li>如果是多核的话，才能更好的发挥多线程的效率。(现在的服务 器都是多核的)</li><li><strong>一个Java应用程序java.exe， 其实至少有三个线程: main():主线程，gc()垃圾回收线程，异常处理线程。当然如果发生异常，会影响主线程。</strong></li></ul><p><strong>并行：多个CPU同时执行多个任务。比如:多个人同时做不同的事。</strong></p><p><strong>并发：一个CPU(采用时间片)同时执行多个任务。比如:秒杀、多个人做同一件事。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单核与多核cpu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程和线程的区别</title>
      <link href="/2021/08/25/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2021/08/25/%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<ul><li><p>说起进程，就不得不说下程序。程序是指令和数据的有序集合，其本身没有任何运行的含义，是一 个静态的概念。</p></li><li><p>而进程则是执行程序的一次执行过程，它是一个动态的概念。是系统资源分配的单位</p></li><li><p>通常在一个进程中可以包含若干个线程，当然一个进程中至少有一 个线程， 不然没有存在的意义。线程是CPU调度和执行的的单位。</p></li></ul><ul><li><p><strong>核心概念：</strong></p><ul><li><font color="#FF0000">线程就是独立的执行路径; </font></li><li>在程序运行时，即使没有自己创建线程，后台也会有多个线程,如主线程，gc线程;</li><li>main()称之为主线程，为系统的入口，用于执行整个程序;</li><li>在一个进程中，如果开辟了多个线程，线程的运行由调度器安排调度，调度器是与操作系统紧密相关的，先后顺序是不能认为的干预的。</li><li>对同一份资源操作时，会存在资源抢夺的问题，需要加入并发控制; </li><li>线程会带来额外的开销，如cpu调度时间，并发控制开销。</li><li><font color="#FF0000">每个线程在自己的工作内存交互，内存控制不当会造成数据不一致</font></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 多线程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进程和线程的区别 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
